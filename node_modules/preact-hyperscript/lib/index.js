
var createHelpers = require('hyperscript-helpers')
var toInlineStyle = require('./to-inline-style')
var parse = require('parse-hyperscript')
var classNames = require('classnames')
var ref = require('preact');
var h = ref.h;

exports.createComponent = createComponent
exports.createElement = createElement

var helpers = createHelpers(createElement)

Object.keys(helpers).forEach(function (name) {
  module.exports[name] = helpers[name]
})

function createElement () {
  var ref = parse(arguments);
  var node = ref.node;
  var attrs = ref.attrs;
  var children = ref.children;

  for (var key in attrs) {
    attrs[key] = decorate(attrs[key], key)
  }

  return h(node, attrs, children)
}

function decorate (val, name) {
  switch (name) {
    case 'class':
      return classNames(val)
    case 'style':
      return val !== 'string'
        ? toInlineStyle(val)
        : val
    default:
      return val
  }
}

function createComponent (Component) {
  return function () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    return createElement.apply(void 0, [ Component ].concat( args ));
  }
}
